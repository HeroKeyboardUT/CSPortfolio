#include "Hieudz.h"
// Given an array of positive integers nums and a positive integer target, 
// return the minimal length of a subarray whose sum is greater than or equal to target.
//  If there is no such subarray, return 0 instead.
class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {
        int res = INT_MAX;
        for(int i = 0; i < nums.size(); i++) {
            for (int j = i; j < nums.size(); j++) {
                int sum = 0;
                for(int k = i; k <= j; k++) {
                    sum += nums[k];
                }
                if(sum >= target) {
                    res = min(res, j - i + 1);
                }
            }
        }
        return res == INT_MAX ? 0 : res;
    }
    int minSubArrayLen1(int target, vector<int>& nums) {
        int n = nums.size();
        int left = 0, sum = 0, res = INT_MAX;

        for (int right = 0; right < n; right++) {
            sum += nums[right]; 
            while (sum >= target) { 
                res = min(res, right - left + 1); 
                sum -= nums[left]; 
                left++; 
            }
        }

        return res == INT_MAX ? 0 : res;
    }
};